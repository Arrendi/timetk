% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tk_make_index_sequences.R
\name{tk_make_index_sequence}
\alias{tk_make_index_sequence}
\alias{tk_make_holiday_sequence}
\alias{tk_make_weekend_sequence}
\alias{tk_make_weekday_sequence}
\title{Make date and date-time sequences between a start and end date}
\usage{
tk_make_index_sequence(
  start_date,
  end_date,
  by = "day",
  skip_values = NULL,
  insert_values = NULL
)

tk_make_holiday_sequence(
  start_date,
  end_date,
  calendar = c("NYSE", "LONDON", "NERC", "TSX", "ZURICH"),
  skip_values = NULL,
  insert_values = NULL
)

tk_make_weekend_sequence(start_date, end_date)

tk_make_weekday_sequence(
  start_date,
  end_date,
  remove_weekends = TRUE,
  remove_holidays = FALSE,
  calendar = c("NYSE", "LONDON", "NERC", "TSX", "ZURICH"),
  skip_values = NULL,
  insert_values = NULL
)
}
\arguments{
\item{start_date}{Used to define the starting date for date sequence generation.
Provide in "YYYY-MM-DD" format.}

\item{end_date}{Used to define the ending date for date sequence generation.
Provide in "YYYY-MM-DD" format.}

\item{by}{A character string, containing one of
\code{"sec"}, \code{"min"}, \code{"hour"}, \code{"day"}, \code{"week"}, \code{"month"}, \code{"quarter"} or \code{"year"}.
You can create regularly spaced sequences using phrases like \code{by = "10 min"}.}

\item{skip_values}{A daily date sequence to skip}

\item{insert_values}{A daily date sequence to insert}

\item{calendar}{The calendar to be used in Date Sequence calculations for Holidays
from the \code{timeDate} package.
Acceptable values are: \code{"NYSE"}, \code{"LONDON"}, \code{"NERC"}, \code{"TSX"}, \code{"ZURICH"}.}

\item{remove_weekends}{A logical value indicating whether or not to
remove weekends (Saturday and Sunday) from the date sequence}

\item{remove_holidays}{A logical value indicating whether or not to
remove common holidays from the date sequence}
}
\value{
A vector containing future dates
}
\description{
Make date and date-time sequences between a start and end date
}
\details{
\strong{Daily Sequences}

Make a daily sequence with \code{tk_make_index_sequence(by)}. Examples:
\itemize{
\item Every Day: \code{by = "day"}
\item Every 2-Weeks: \code{by = "2 weeks"}
\item Every 6-months: \code{by = "6 months"}
}

\strong{Sub-Daily Sequences}

Make a sub-daily sequence with \code{tk_make_index_sequence(by)}. Examples:
\itemize{
\item Every minute: \code{by = "min"}
\item Every 30-seconds: \code{by = "30 sec"}
\item Every 2-hours: \verb{by = "2 hours}
}

\strong{Holiday Sequences}

\code{tk_make_holiday_sequence()} is a wrapper for various holiday calendars from the \code{timeDate} package,
making it easy to generate holiday sequences for common business calendars:
\itemize{
\item New York Stock Exchange: \code{calendar = "NYSE"}
\item Londo Stock Exchange: \code{"LONDON"}
\item North American Reliability Council: \code{"NERC"}
\item Toronto Stock Exchange: \code{"TSX"}
\item Zurich Stock Exchange: \code{"ZURICH"}
}
}
\examples{
library(dplyr)
library(tidyquant)
library(timetk)

options(max.print = 50)

# ---- BASIC EXAMPLES ----

# Date Sequence
tk_make_index_sequence("2017-01-01", "2017-12-31", by = "day")

# Date-Time Sequence
tk_make_index_sequence("2017-01-01", "2017-12-31", by = "10 min")

# Holiday Sequence
tk_make_holiday_sequence("2017-01-01", "2017-12-31", calendar = "NYSE")

# Weekday Sequence
tk_make_weekday_sequence("2017-01-01", "2017-12-31", remove_holidays = TRUE)

# Weekday Sequence + Removing Holidays
tk_make_weekday_sequence("2017-01-01", "2017-12-31", remove_holidays = TRUE)

# ---- COMBINE WITH MAKE FUTURE TIMESERIES FROM EXISTING ----
# - A common machine learning application is creating a future time series data set
#   from an existing

# Create index of days that FB stock will be traded in 2017 based on 2016 + holidays
FB_tbl <- FANG \%>\% filter(symbol == "FB")

holidays <- tk_make_holiday_sequence(
    start_date = "2017-01-01",
    end_date   = "2017-12-31",
    calendar   = "NYSE")

# Remove holidays with skip_values, and remove weekends with inspect_weekdays = TRUE
FB_tbl \%>\%
    tk_index() \%>\%
    tk_make_future_timeseries(n_future         = 366,
                              inspect_weekdays = TRUE,
                              skip_values      = holidays)



}
\seealso{
\itemize{
\item Make future index from existing: \code{\link[=tk_make_future_timeseries]{tk_make_future_timeseries()}}
\item Index extraction: \code{\link[=tk_index]{tk_index()}}
\item Index information: \code{\link[=tk_get_timeseries_summary]{tk_get_timeseries_summary()}}, \code{\link[=tk_get_timeseries_signature]{tk_get_timeseries_signature()}}
}
}
