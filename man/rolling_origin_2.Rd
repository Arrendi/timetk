% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rsample-rolling_origin_2.R
\name{rolling_origin_2}
\alias{rolling_origin_2}
\title{Rolling Origin Forecast Resampling}
\usage{
rolling_origin_2(
  data,
  initial = 5,
  assess = 1,
  cumulative = TRUE,
  skip = 0,
  overlap = 0,
  ...
)
}
\arguments{
\item{data}{A data frame.}

\item{initial}{The number of samples used for analysis/modeling in the
initial resample.}

\item{assess}{The number of samples used for each assessment resample.}

\item{cumulative}{A logical. Should the analysis resample grow beyond the
size specified by \code{initial} at each resample?.}

\item{skip}{A integer indicating how many (if any) \emph{additional} resamples
to skip to thin the total amount of data points in the analysis resample.
See the example below.}

\item{overlap}{A value to include an overlap between the assessment
and analysis set. This is useful if lagged predictors will be used
during training and testing.}

\item{...}{Not currently used.}
}
\value{
An tibble with classes \code{rolling_origin}, \code{rset}, \code{tbl_df}, \code{tbl},
and \code{data.frame}. The results include a column for the data split objects
and a column called \code{id} that has a character string with the resample
identifier.
}
\description{
This resampling method is useful when the data set has a strong time
component. The resamples contain data points that are
\emph{consecutive values}. This version differs from \code{rsample::rolling_origin()} in
that it has an \code{overlap} parameter which is useful for prediction with
lagged predictors.
}
\details{
The main options, \code{initial} and \code{assess}, control the number of
data points from the original data that are in the analysis and assessment
set, respectively. When \code{cumulative = TRUE}, the analysis set will grow as
resampling continues while the assessment set size will always remain
static.

\code{skip} enables the function to not use every data point in the resamples.
When \code{skip = 0}, the resampling data sets will increment by one position.
Suppose that the rows of a data set are consecutive days. Using \code{skip = 6}
will make the analysis data set operate on \emph{weeks} instead of days. The
assessment set size is not affected by this option.

\code{overlap} enables the test data to overlap with the training data, which
is useful for predictions needing access to prior history such as when
using lagged predictors.
}
\examples{
library(recipes)
library(rsample)
library(timetk)
library(tidyverse)

# Monthly sales data
drinks_tbl <- drinks \%>\%
    rename(sales = S4248SM144NCEN) \%>\%
    as_tibble()

# 5-year resample with a 12-month overlap and 12-month forecast horizon
# - Allows use of a 12-month or longer lag
resample_spec <- rolling_origin_2(
    drinks_tbl,
    initial    = 4 * 12,
    assess     = 12,
    cumulative = FALSE,
    skip       = 2 * 12,
    overlap    = 12
)

resample_spec

# Create a lag recipe using one of the training resamples
resample_1 <- resample_spec \%>\% pluck(1, 1)

recipe_lag <- recipe(sales ~ ., data = training(resample_1)) \%>\%
    step_lag(sales, lag = 12) \%>\%
    step_naomit(all_predictors())

# Apply a lag recipe to one of the testing resamples to show the effect
bake(prep(recipe_lag), testing(resample_1))


}
