% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rsample-initial_time_split_2.R
\name{initial_time_split_2}
\alias{initial_time_split_2}
\title{Simple Training/Test Set Splitting for Time Series}
\usage{
initial_time_split_2(data, prop = 3/4, lag = 0, ...)
}
\arguments{
\item{data}{A data frame.}

\item{prop}{The proportion of data to be retained for modeling/analysis.}

\item{lag}{A value to include an lag between the assessment
and analysis set. This is useful if lagged predictors will be used
during training and testing.}

\item{...}{Not currently used.}
}
\value{
An \code{rset} object that can be used with the \code{training} and \code{testing}
functions to extract the data in each split.
}
\description{
\code{initial_time_split_2()} creates training and testing sets for Time Series
Validation. This version differs from \code{rsample::initial_time_split()} in
that it has an \code{lag} parameter which is useful for prediction with
lagged predictors.
}
\details{
\strong{Lagged Predictors}

\code{lag} enables the test data to lag with the training data, which
is useful for predictions needing access to prior history such as when
using lagged predictors.
}
\examples{
library(recipes)
library(rsample)
library(timetk)
library(tidyverse)

# 5-years of monthly data
drinks_subset <- drinks \%>\%
    tail(5*12) \%>\%
    rename(sales = S4248SM144NCEN) \%>\%
    as_tibble()

# Time series split with 12 period lag
drinks_lag_split <- initial_time_split_2(
    drinks_subset,
    prop    = 4 / 5,
    lag = 12
)

# Extract train and test sets
train_data <- training(drinks_lag_split)
test_data  <- testing(drinks_lag_split)

# Note 12 period lag
train_data \%>\% tail(12)
test_data

# Make recipe
rec_lag <- recipe(sales ~ ., training(drinks_lag_split)) \%>\%
    step_lag(sales, lag = 12) \%>\%
    step_naomit(all_predictors())

# Apply recipe to test data - Correctly applies the lag
bake(prep(rec_lag), testing(drinks_lag_split))

}
