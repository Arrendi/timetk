% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_list_column.R
\name{map_list_column}
\alias{map_list_column}
\alias{map_list_column}
\alias{map_list_column_}
\title{Map a function rowwise to a list-column}
\usage{
map_list_column(data, list_col, fun, ..., .drop = FALSE,
  col_rename = "data.map")

map_list_column_(data, list_col, fun, ..., .drop = FALSE,
  col_rename = "data.map")
}
\arguments{
\item{data}{A nested tibble}

\item{list_col}{The column name of the column containing the nested lists.}

\item{fun}{The function to be applied rowwise}

\item{...}{Additional arguments to pass on to the function, \code{fun}.}

\item{.drop}{Whether or not to unnest the return and drop other list columns
in the process. \code{FALSE} by default, which returns nested list-columns.}

\item{col_rename}{Used to rename a nested list column that is returned if
\code{.drop = FALSE}.}
}
\value{
A \code{grouped_df}, where the non-list columns of the
original are used as grouping columns alongside the tidied outputs.
}
\description{
Map a function rowwise to a list-column
}
\details{
The \code{map_list_column} method is designed to expedite applying functions rowise to list-columns
that are nested meaning the columns contain lists.
}
\examples{
library(tidyverse)
library(sweep)

regressions <- mtcars \%>\%
    group_by(cyl) \%>\%
    do(mod = lm(mpg ~ wt, .))

regressions

regressions \%>\% map_list_column(mod, sw_tidy, .drop = TRUE)

}
